<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    autoReload="true"
    throwConfigExceptions="true"
    internalLogLevel="Info"
    internalLogFile="c:\temp\internal-nlog-AspNetCore3.txt">

    <!-- enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>

    <!-- the targets to write to -->
    <targets>
        <!-- File Target for all log messages with basic details -->
        <target xsi:type="File" name="allfile" fileName=".\logs\nlog-AspNetCore3-all-${shortdate}.log"
                layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

        <target 
                xsi:type="File" 
                name="addfile" 
                fileName=".\logs\log.jsonl"
                archiveEvery="Minute"
                archiveFileName=".\logs\log-archive-${shortdate}.jsonl"
                maxArchiveFiles="2"
        >
            <layout xsi:type="JsonLayout">
                <attribute name="time" layout="${longdate}" />
                <attribute name="eventid" layout="${event-properties:item=EventId_Id:whenEmpty=0}" />
                <attribute name="level" layout="${uppercase:${level}}" />
                <attribute name="message" layout="${message}" />
                <attribute name="logger" layout="${logger}" />
                <attribute name="detail" encode="false">
                    <layout xsi:type="JsonLayout" includeAllProperties="true" maxRecursionLimit="2" renderEmptyObject="false"/>
                </attribute>
                <attribute name="exception" layout="${exception:format=ToString:innerFormat:ToString:maxInnerExceptionLevel=2}" />
            </layout>
        </target>
                

        <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
        <target xsi:type="File" name="ownFile-web" fileName=".\logs\nlog-AspNetCore3-own-${shortdate}.log"
                layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|" />

        <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
        <target xsi:type="Console" name="lifetimeConsole" layout="${level:truncate=4:tolower=true}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />
    </targets>

    <!-- rules to map from logger name to target -->
    <rules>
        <!--All logs, including from Microsoft-->
        <logger name="*" minlevel="Trace" writeTo="allfile" />

        <!--Output hosting lifetime messages to console target for faster startup detection -->
        <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web, addfile" final="true" />

        <!--Skip non-critical Microsoft logs and so log only own logs-->
        <logger name="Microsoft.*" maxlevel="Info" final="true" />  <!-- BlackHole -->

        <logger name="*" minlevel="Debug" writeTo="ownFile-web" />

        <logger name="*" minlevel="Trace" writeTo="addfile" />
        <logger name="*" minlevel="Info" writeTo="lifetimeConsole" />
    </rules>
</nlog>